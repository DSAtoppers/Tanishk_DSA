class Solution {
public:
    int binarys(vector<int>& n,int s){
        int start=0,end=n.size()-1,mid,res=-1;
        while(start<=end){
            mid=start+ (end-start)/2;
            if(n[mid]==s){
                res= mid;
                break;
            }
            else if(n[mid]>s){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
}
        if(res!=-1){
            mid--;
            while(mid>=0){
                mid--;
                if(n[mid]==s){
                    res=mid;
                }
            }
            return res;
        }
        if(n[mid]>s&&mid<n.size()-1){
            return mid;    
        }
        else{
            return -1;
        }
        
}
    int specialArray(vector<int>& n) {
     sort(n.begin(),n.end());
        int size=n.size();
        if(size==0){
            return 0;
}
     for(int i=1;i<size+1;i++){
         int aa=binarys(n,i);
         cout<<size-aa<<"--hi--"<<i<<endl;
         if(aa==-1&&i==size){
             return -1;
         }
         if(size-aa==i){
             return i;
         }
     }
        return -1;
    }
};